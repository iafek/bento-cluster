#!/usr/bin/env bash

# (c) Copyright 2014 WibiData, Inc.
#
# See the NOTICE file distributed with this work for additional
# information regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ------------------------------------------------------------------------------

# This script either creates (if not present) or updates a ${HOME}/.bento-hosts
# file with an entry for a newly created or started bento. The .bento-hosts
# file will be used to supplement /etc/hosts when resolving hostnames if the
# $HOSTALIASES environment variable points to it on Linux systems.

# ------------------------------------------------------------------------------

set -o nounset   # Fail when referencing undefined variables
set -o errexit   # Script exits on the first error
set -o pipefail  # Pipeline status failure if any command fails
if [[ ! -z "${DEBUG:-}" ]]; then
  source=$(basename "${BASH_SOURCE}")
  PS4="# ${source}":'${LINENO}: '
  set -x
fi

# ------------------------------------------------------------------------------

if [[ -z "$HOSTALIASES" ]]; then
  echo "\$HOSTALIASES is unset. Please source \$BENTO_CLUSTER_HOME/bin/bento-env.sh."
  exit 1
fi

address=$1
host=$2

if [[ $host != bento* ]]; then
  echo "Invalid hostname: '${host}'. Must start with 'bento'."
  exit 1;
fi

if [[ $address != 172.17.* ]]; then
  echo "Invalid address: '${address}'. Must be be in the 172.17.0.0/16 subnet."
  exit 1;
fi
if [[ -f $HOSTALIASES ]]; then
  temp=$(mktemp /tmp/hosts-aliases.tmp.XXXXXX)
  cat $HOSTALIASES | grep --invert-match "\s${host}$" > $temp
  echo "${address}	${host}" >> $temp
  cp $temp $HOSTALIASES
else
  echo "${address}	${host}" >> $HOSTALIASES
fi

